buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
}

allprojects {
    apply plugin: "java-library"
    version = '1.0'

    ext {
        appName = "Heslington_Hustle"
        gdxVersion = '1.12.1'
    }

    java {
        toolchain {
            languageVersion.set(JavaLanguageVersion.of(11))
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":core") {
    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
    }

    sourceSets.main.java.srcDirs = [ "src/" ]
    sourceSets.main.resources.srcDirs = ["../assets"]
}

project(":desktop") {
    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }
}

project(":tests") {
    apply plugin: "jacoco"
    sourceSets.test.java.srcDirs = ["src/"]

    dependencies {
        implementation project(":core")

        implementation "junit:junit:4.+"
        implementation "org.mockito:mockito-all:1.9.+"

        implementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        implementation "com.badlogicgames.gdx:gdx:$gdxVersion"

        testImplementation 'junit:junit:4.+'
        testImplementation "org.mockito:mockito-all:1.9.+"

        testImplementation "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx:$gdxVersion"
        testImplementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    }

    jacocoTestReport {
        dependsOn test
        sourceSets project(':core').sourceSets.main
        afterEvaluate {
            classDirectories.setFrom(files(classDirectories.files.collect {
                fileTree(dir: it, exclude: ['**/*Tests.*', '**/GdxTestRunner.*'])
            }))
        }
    }
    
    test {
        finalizedBy jacocoTestReport
    }
}
